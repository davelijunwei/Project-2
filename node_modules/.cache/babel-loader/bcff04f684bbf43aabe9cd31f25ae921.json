{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dave/Desktop/iwatch/src/components/PortfolioForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './PortfolioForm.css';\nimport { Col, Button, Form, FormGroup, Label, Input, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\n\nconst PortfolioForm = ({\n  addStockSymbol\n}) => {\n  _s();\n\n  const [quotes, setQuotes] = useState(\"\");\n  const [avgCost, setAvgCost] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [errorMsgQuote, setErrorMsgQuote] = useState(\"\");\n  const [errorMsgAvgCost, setErrorMsgAvgCost] = useState(\"\");\n  const [errorMsgPurchaseDate, setErrorMsgPurchaseDate] = useState(\"\");\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const togglePopUp = () => setPopoverOpen(!popoverOpen);\n\n  const handleChange = ({\n    target\n  }) => {\n    setQuotes(target.value.toUpperCase());\n  };\n\n  const handleChangeCost = ({\n    target\n  }) => {\n    setAvgCost(target.value);\n  };\n\n  const handlePurchaseDate = ({\n    target\n  }) => {\n    setPurchaseDate(target.value);\n  };\n\n  const validate = () => {\n    if (!quotes) {\n      setErrorMsgQuote(\"Stock symbol cannot be blank\");\n      return false;\n    }\n\n    if (!avgCost) {\n      setErrorMsgAvgCost(\"Average cost cannot be blank\");\n      return false;\n    }\n\n    let regex = /^\\d+(\\.\\d{0,2})?$/g;\n\n    if (!regex.test(avgCost)) {\n      setErrorMsgAvgCost(\"Average cost must be number\");\n      return false;\n    }\n\n    let tradeDate = new Date(purchaseDate);\n    let today = new Date();\n\n    if (tradeDate > today) {\n      setErrorMsgPurchaseDate(\"Purchase date cannot be from future ðŸ˜„\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isValid = validate();\n\n    if (!isValid) {\n      return false;\n    } else {\n      setErrorMsgQuote(\"\");\n      setErrorMsgAvgCost(\"\");\n    }\n\n    addStockSymbol(quotes.toUpperCase(), avgCost, purchaseDate);\n    setQuotes(\"\");\n    setAvgCost(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    style: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Portfolio tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popUpButton\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        id: \"Popover1\",\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        placement: \"bottom\",\n        isOpen: popoverOpen,\n        target: \"Popover1\",\n        toggle: togglePopUp,\n        children: [/*#__PURE__*/_jsxDEV(PopoverHeader, {\n          children: \"User Guide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PopoverBody, {\n          children: \"Enter only U.S stock symbol, all fields must be filled. Current price is not live\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form-wrapper\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"exampleEmail\",\n          sm: 5,\n          children: \"Stock Symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"stock-symbol\",\n            value: quotes,\n            onChange: handleChange,\n            placeholder: \"Eg: AAPL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: \"red\"\n            },\n            children: errorMsgQuote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"examplePassword\",\n          sm: 5,\n          children: \"Average Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"avg-cost\",\n            value: avgCost,\n            onChange: handleChangeCost,\n            placeholder: \"Eg: 98.01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: \"red\"\n            },\n            children: errorMsgAvgCost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"form-label\",\n          for: \"examplePassword\",\n          sm: 5,\n          children: \"Purchase  Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 2,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"date\",\n            name: \"date\",\n            value: purchaseDate,\n            onChange: handlePurchaseDate,\n            placeholder: \"03/11/2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: \"green\"\n            },\n            children: errorMsgPurchaseDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true,\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Your Holding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Current Stock Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Book Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Holding Period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"5-Years Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PortfolioForm, \"57R6Xh1WBo8KhzmZE2nn4/adR4s=\");\n\n_c = PortfolioForm;\nexport default PortfolioForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioForm\");","map":{"version":3,"sources":["/Users/dave/Desktop/iwatch/src/components/PortfolioForm.jsx"],"names":["React","useState","Col","Button","Form","FormGroup","Label","Input","Popover","PopoverHeader","PopoverBody","PortfolioForm","addStockSymbol","quotes","setQuotes","avgCost","setAvgCost","purchaseDate","setPurchaseDate","errorMsgQuote","setErrorMsgQuote","errorMsgAvgCost","setErrorMsgAvgCost","errorMsgPurchaseDate","setErrorMsgPurchaseDate","popoverOpen","setPopoverOpen","togglePopUp","handleChange","target","value","toUpperCase","handleChangeCost","handlePurchaseDate","validate","regex","test","tradeDate","Date","today","handleSubmit","event","preventDefault","isValid","width","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState }from 'react';\nimport './PortfolioForm.css';\nimport { Col, Button, Form, FormGroup, Label, Input, Popover, PopoverHeader, PopoverBody,} from 'reactstrap';\n\nconst PortfolioForm = ({addStockSymbol}) => {\n\n    const [ quotes, setQuotes ] = useState(\"\");\n    const [ avgCost, setAvgCost ] = useState(\"\");\n    const [ purchaseDate, setPurchaseDate ] = useState(\"\");\n    const [ errorMsgQuote, setErrorMsgQuote ] = useState(\"\");\n    const [ errorMsgAvgCost, setErrorMsgAvgCost ] = useState(\"\");\n    const [ errorMsgPurchaseDate, setErrorMsgPurchaseDate ] = useState(\"\");\n    const [popoverOpen, setPopoverOpen] = useState(false);\n\n    const togglePopUp = () => setPopoverOpen(!popoverOpen);\n\n    const handleChange = ({target}) => {\n        setQuotes(target.value.toUpperCase());\n      }\n\n    const handleChangeCost = ({target}) => {\n        setAvgCost(target.value);\n      }\n\n    const handlePurchaseDate = ({target}) => {\n      setPurchaseDate(target.value);\n      }\n\n    const validate = () => {\n\n      if (!quotes){\n        setErrorMsgQuote(\"Stock symbol cannot be blank\");\n        return false;\n      }\n\n      if (!avgCost){\n        setErrorMsgAvgCost(\"Average cost cannot be blank\");\n        return false;\n      }\n\n      let regex = /^\\d+(\\.\\d{0,2})?$/g;\n      if (!regex.test(avgCost)) {\n        setErrorMsgAvgCost(\"Average cost must be number\")\n        return false;\n      }\n\n      let tradeDate = new Date(purchaseDate);\n      let today = new Date();\n      if(tradeDate > today) {\n        setErrorMsgPurchaseDate(\"Purchase date cannot be from future ðŸ˜„\")\n        return false;\n      }\n\n      return true;\n    }\n\n    const handleSubmit = (event) =>  {\n      event.preventDefault();\n      const isValid = validate();\n\n      if (!isValid){\n        return false;\n      } else {\n        setErrorMsgQuote(\"\");\n        setErrorMsgAvgCost(\"\");\n      }\n\n      addStockSymbol(quotes.toUpperCase(), avgCost, purchaseDate);\n      setQuotes(\"\");\n      setAvgCost(\"\");\n    }\n\n    return (\n        <div className=\"text-center\" style={{width: \"100%\"}}>\n            <h1>Portfolio tracker</h1>\n            <div className=\"popUpButton\">\n              <Button color=\"success\" id=\"Popover1\" type=\"button\">\n                <strong>?</strong>\n              </Button>\n              <Popover placement=\"bottom\" isOpen={popoverOpen} target=\"Popover1\" toggle={togglePopUp}>\n                <PopoverHeader>User Guide</PopoverHeader>\n                <PopoverBody>Enter only U.S stock symbol, all fields must be filled. Current price is not live \n                </PopoverBody>\n              </Popover>\n            </div>\n            <Form className=\"form-wrapper\" onSubmit={handleSubmit}>\n              <FormGroup row>\n                <Label className=\"form-label\" for=\"exampleEmail\" sm={5}>Stock Symbol</Label>\n                <Col sm={2}>\n                  <Input type=\"text\" name=\"stock-symbol\" value={quotes} onChange={handleChange} placeholder=\"Eg: AAPL\" />\n                  <div style={{ fontSize: 12, color: \"red\" }}>{errorMsgQuote}</div>\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Label className=\"form-label\" for=\"examplePassword\" sm={5}>Average Cost</Label>\n                <Col sm={2}>\n                  <Input type=\"text\" name=\"avg-cost\" value={avgCost} onChange={handleChangeCost} placeholder=\"Eg: 98.01\" />\n                  <div style={{ fontSize: 12, color: \"red\" }}>{errorMsgAvgCost}</div>\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Label className=\"form-label\" for=\"examplePassword\" sm={5}>Purchase  Date</Label>\n                <Col sm={2}>\n                  <Input type=\"date\" name=\"date\" value={purchaseDate} onChange={handlePurchaseDate} placeholder=\"03/11/2020\" />\n                  <div style={{ fontSize: 12, color: \"green\" }}>{errorMsgPurchaseDate}</div>\n                </Col>\n              </FormGroup>\n              <Button color=\"primary\">SUBMIT</Button>\n            </Form> \n<Table responsive>\n            <thead>\n                            <tr>\n                            <th>#</th>\n                            <th>Your Holding</th>\n                            <th>Current Stock Price</th>\n                            <th>Book Cost</th>\n                            <th>Holding Period</th>\n                            <th>Return</th>\n                            <th>5-Years Chart</th>\n                            <th></th>\n                            </tr>\n                        </thead>\n                  </Table>      \n  </div>\n    )\n}\n\nexport default PortfolioForm;\n"]},"metadata":{},"sourceType":"module"}